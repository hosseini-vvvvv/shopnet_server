// <auto-generated />
using System;
using API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace API.Data.Migrations
{
    [DbContext(typeof(StoreContext))]
    [Migration("20240306192428_CategoryThree")]
    partial class CategoryThree
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.2");

            modelBuilder.Entity("API.Entities.CategoryOne", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.ToTable("CategoryOne");
                });

            modelBuilder.Entity("API.Entities.CategoryThree", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CategoryTwoid")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.HasIndex("CategoryTwoid");

                    b.ToTable("CategoryThree");
                });

            modelBuilder.Entity("API.Entities.CategoryTwo", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CategoryOneid")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.HasIndex("CategoryOneid");

                    b.ToTable("CategoryTwo");
                });

            modelBuilder.Entity("API.Entities.Product", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Price")
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("API.Entities.User", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("API.Entities.CategoryThree", b =>
                {
                    b.HasOne("API.Entities.CategoryTwo", null)
                        .WithMany("CategoryThree")
                        .HasForeignKey("CategoryTwoid");
                });

            modelBuilder.Entity("API.Entities.CategoryTwo", b =>
                {
                    b.HasOne("API.Entities.CategoryOne", null)
                        .WithMany("CategoryTwo")
                        .HasForeignKey("CategoryOneid");
                });

            modelBuilder.Entity("API.Entities.CategoryOne", b =>
                {
                    b.Navigation("CategoryTwo");
                });

            modelBuilder.Entity("API.Entities.CategoryTwo", b =>
                {
                    b.Navigation("CategoryThree");
                });
#pragma warning restore 612, 618
        }
    }
}
